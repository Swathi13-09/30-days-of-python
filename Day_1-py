
# üìÖ Day 1 ‚Äì Introduction to Python üêç

## üß† What is Python?

> Python is a **high-level**, **interpreted**, **dynamically typed**, and **multi-paradigm** programming language.  
It supports:
- **Procedural Programming**
- **Object-Oriented Programming (OOP)**
- **Functional Programming**

Originally created by **Guido van Rossum** in the late 1980s, Python is now one of the most widely used languages in data science, AI, web development, automation, and scripting.

---

## üîç Key Features

| Feature              | Description                                                             |
|----------------------|-------------------------------------------------------------------------|
| Easy Syntax          | Readable like English ‚Äì reduces learning curve                          |
| Interpreted          | Executes line-by-line, no compilation needed                            |
| Dynamically Typed    | No need to declare data types                                           |
| Extensive Libraries  | Includes `NumPy`, `Pandas`, `TensorFlow`, `Flask`, and many more        |
| Cross-Platform       | Works on Windows, macOS, Linux                                           |

---

## ‚öôÔ∏è Environment Setup

- üì• Install from: [https://www.python.org/downloads](https://www.python.org/downloads)
- üß™ Verify Installation:
```bash
python --version

---

## ‚úÖ What I Learned

### üîπ 1. Python Overview
- Python is an interpreted, high-level, dynamically typed language.
- It‚Äôs widely used in web development, automation, data science, and AI.

### üîπ 2. Variables and Data Types
- Variables store values and don‚Äôt require a declared data type.
- Common types: `int`, `float`, `str`, `bool`, `NoneType`
- Checked using `type()` and memory using `id()`

```python
name = "Swathi"
age = 21
is_student = True

print(type(name))       # <class 'str'>
print(type(age))        # <class 'int'>
print(type(is_student)) # <class 'bool'>

 what is Input and Output ?
input() is used to collect user data (always as str)

print() and f-strings are used to display formatted output
name = input("Enter your name: ")
print(f"Hello, {name}!")

 what is Type Conversion ?
Implicit Conversion: Python handles it automatically

Explicit Conversion: Manually convert using int(), str(), float()

a = 5
b = 3.2
print(a + b)  # Output: 8.2 (int + float = float)

num_str = "45"
num_int = int(num_str)
print(num_int + 5)  # Output: 50
 what is Error Handling (Bonus)?
Errors like TypeError, ValueError, and NameError were explored

Used try-except blocks to handle input errors gracefully 
