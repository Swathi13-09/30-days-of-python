📘 Day 5 – Control Structures in Python

🔰 What are Control Structures?
Control structures guide the flow of execution in your code — deciding what to run, when to run, and how often.

Types of control structures in Python:

Conditional Statements (if, elif, else) - Make decisions

Loops (for, while) - Repeat actions

Nested Control Structures (Control structures within control structures)

Control Flow Statements (break, continue, pass) - Alter flow




✅ 1. CONDITIONAL STATEMENTS
🔹 Definition:
Conditional statements are used to execute certain blocks of code based on specific conditions.

🔹 Keywords:
if: Executes a block if the condition is true.

elif: Checks additional conditions if the previous ones are false.

else: Executes if none of the above conditions are true.

🔹 Example:

marks = 85

if marks >= 90:
    print("Grade A+")
elif marks >= 75:
    print("Grade A")
else:
    print("Below Grade A")

🔁 2. LOOPS
🔹 Definition:
Loops are used to execute a block of code repeatedly until a condition is met.

🔸 for Loop
🔹 Definition:
A for loop is used when the number of iterations is known or finite.

🔹 Syntax:

for i in range(1, 6):
    print(i)
🏢 Use Case:
Used to send 100 marketing emails, process 50 CSV files, etc.

🔸 while Loop

🔹 Definition:
A while loop is used when the number of iterations is not known in advance. It runs until the condition becomes false.

🔹 Syntax:

count = 0
while count < 5:
    print("Looping...")
    count += 1

🔁 3. CONTROL FLOW STATEMENTS
These are special commands inside loops that control how the loop behaves.

🔸 break
🔹 Definition:
Immediately exits the loop, even if the condition is still true.

🔹 Example:

for i in range(5):
    if i == 3:
        break
    print(i)
🧠 Use: Exit on correct OTP, cancel process if memory full.

🔸 continue

🔹 Definition:
Skips the current loop iteration and moves to the next iteration.

🔹 Example:

for i in range(5):
    if i == 3:
        continue
    print(i)
🧠 Use: Skip invalid entries, empty lines in files.

🔸 pass
🔹 Definition:
A placeholder — it does nothing. Useful when you're writing code structure but haven't implemented logic yet.

🔹 Example:

if True:
    pass
.

🔄 4. NESTED CONTROL STRUCTURES
🔹 Definition:
Putting if statements inside loops, or loops inside loops, to create complex decision logic.

for i in range(3):
    mark = int(input("Enter mark: "))
    if mark >= 50:
        print("Pass")
    else:
        print("Fail")
